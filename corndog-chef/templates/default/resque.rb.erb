pid_dir  = '/srv/www/corndog/shared/pids'
log_dir  = '/srv/www/corndog/shared/log'
conf_dir = '/srv/www/corndog/current/config'

Bluepill.application("resque", :log_file => "#{log_dir}/bluepill.log") do |app|
  app.working_dir = "/srv/www/corndog/current"
  app.uid = 'root'
  app.gid = 'root'

  priority_process = {
    high: { 'QUEUES' => 'high', 'COUNT' => '2' },
    medium: { 'QUEUES' => 'high,medium', 'COUNT' => '3' },
    low: { 'QUEUES' => 'high,medium,low,*', 'COUNT' => '5' }
  }
  priority_process.each do |priority, environment|
    app.process("resque_#{priority}") do |process|
      process.group = "resque-workers"
      process.pid_file = "#{pid_dir}/resque_#{priority}.pid"
      process.environment = environment.merge({ 'RAILS_ENV' => '<%= @rails_env %>' })
      process.start_command = "bundle exec rake resque:workers"
      process.stop_command = "kill -QUIT {{PID}}"
      process.daemonize = true
    end
  end # priority_process

  app.process("resque_scheduler") do |process|
    process.stdout = process.stderr = "#{log_dir}/resque_scheduler.log"
    process.group = "resque-scheduler"
    process.pid_file = "#{pid_dir}/resque_scheduler.pid"
    process.environment = { 'RAILS_ENV' => '<%= @rails_env %>' }
    process.start_command = "bundle exec rake resque:scheduler"
    process.stop_command = "kill -QUIT {{PID}}"
    process.daemonize = true
  end # resque_scheduler

  app.process("resque_web") do |process|
    process.stdout = process.stderr = "#{log_dir}/resque_web.log"
    process.group = "resque-web"
    process.pid_file = "#{pid_dir}/resque_web.pid"
    process.start_command = "bundle exec resque-web -L -p 8888 #{conf_dir}/resque_conf.rb -P #{pid_dir}/resque_web.pid"
    process.stop_command  = "kill -QUIT {{PID}}"
    process.daemonize = true
    process.start_grace_time =    10.seconds
  end # resque_web

end # resque

