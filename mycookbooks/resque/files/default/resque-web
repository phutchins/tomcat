#!/bin/sh
#
# This script starts and stops the Resque Web front end
# This script belongs in /engineyard/bin/resque-web
#
PATH=/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH

usage() {
  echo "Usage: $0 <appname> {start|stop}"
  exit 1
}

if [ $# -lt 2 ]; then usage; fi

if [ "`whoami`" != "root" ]; then
  logger -t `basename $0` -s "Must be run as root"
  exit 1
fi

USER=`stat -c"%U" /data/$1/current`
HOME="/home/$USER" ; export HOME
APP=$1
APP_DIR="/data/${APP}"
APP_ROOT="${APP_DIR}/current"
APP_SHARED="${APP_DIR}/shared"
APP_CONFIG="${APP_SHARED}/config"

GEMFILE="$APP_ROOT/Gemfile"
BUNDLER=""
if [ -f $GEMFILE ];then
  BUNDLER="bundle exec"
fi

COMMAND="sudo $BUNDLER resque-web -p 8888 /data/corndog/current/config/resque_conf.rb"
PID_FILE="/var/run/engineyard/resque/$1/resque_web.pid"

# handle the second param, don't start if already existing
case "$2" in
  start)
    echo "Starting Resque Web"
    cd /data/$1/current
    if [ -f $PID_FILE ]; then
      PID=`cat $PID_FILE`
      if [ -d /proc/$PID ]; then
        echo "Resque Web is already running."
        exit 1
      fi
      rm -f $PID_FILE
    fi
    echo $$ > $PID_FILE
    logger -t "monit-resque-web[$$]" "Starting with: ${COMMAND}"
    exec su -c"$COMMAND -f" $USER
    ;;
  stop)
    echo "Stopping Resque Web"
    if [ -f $PID_FILE ]; then
      kill -15 `cat $PID_FILE` 2>/dev/null; true
    fi

    [ -e "$PID_FILE" ] && rm -f $PID_FILE
    exit 0
    ;;
  *)
    usage
    ;;
esac

