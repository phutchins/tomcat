input {

  file {
    'exclude' => ["production*log", "unicorn*log", "salesforce*", "mail_delivery.log", "newrelic*", "cron*", "bluepill*"]
    'path' => ["/srv/www/corndog/shared/log/*.log"]
    'tags' => ["catchall"]
    'type' => "catchall"
  }

  file {
    'path' => ["/srv/www/corndog/shared/log/production.log"]
    'tags' => ["rails"]
    'type' => "rails"
  }

  file {
    'path' => ["/srv/www/corndog/shared/log/salesforce_offer_thread_monitor.log"]
    'tags' => ["salesforce", "offer_thread"]
    'type' => "salesforce_offer_thread"
  }

  file {
    'path' => ["/srv/www/corndog/shared/log/mail_delivery.log"]
    'tags' => ["mail_delivery"]
    'type' => "mail_delivery"
  }

  file {
    'path' => ["/srv/www/corndog/shared/log/resque*log"]
    'tags' => ["resque"]
    'type' => "resque"
  }

  file {
    'path' => ["/var/lib/aws/opsworks/chef/*.log"]
    'tags' => ["deploy", "chef"]
    'type' => "deploy"
  }
}

filter {

  if "rails" in [tags] {
    multiline {
      'pattern' => "^\s|Processing|Completed|Redirected|HTTPI"
         'what' => "previous"
    }
    grok {
      'match' => [ "message", '(?m)Started %{WORD:verb} "%{URIPATHPARAM:request}" for %{IPORHOST:clientip} at (?<timestamp>%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{HOUR:hour}:%{MINUTE:minute}:%{SECOND:second} %{ISO8601_TIMEZONE:timezone})\s*Processing by (?<controller>[^#]+)#(?<action>\w+) as (?<format>\S+)(?:\n Parameters: %{DATA:params}\n)?%{DATA}Completed %{NUMBER:response}%{DATA} in %{NUMBER:totalms}ms \(Views: %{NUMBER:viewms}ms \| ActiveRecord: %{NUMBER:activerecordms}ms%{GREEDYDATA}' ]
    }
    date {
      'add_tag' => 'ts'
        'match' => [ "year-month-day hour:minute:second timezone",
                   "YYYY-MM-dd HH:mm:ss Z" ]
    }
  }
  if [type] == "salesforce_offer_thread" {
    grok {
      'match' => ["message", "\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{LOGLEVEL:log_level}\] \[%{DATA:message}\] \[%{NUMBER:occurrences}\]"]
    }
  }

  if "nginx" in [tags] and "access" in [tags] {
    grok {
      'match' => ["message", '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{QS:forwardedfor} %{NUMBER:timing}']
    }
    date {
      'add_tag' => "ts"
      'match' => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
    }
  }

  if "nginx" in [tags] and "error" in [tags] {
    grok {
      'match' => ["message", "%{GREEDYDATA:timestamp} \[%{DATA:loglevel}\] %{GREEDYDATA:errmsg}"]
    }
    date {
      'add_tag' => "ts"
      'match' => ["timestamp", "YYYY/MM/dd HH:mm:ss"]
    }
  }

  if [type] == "deploy" {
    grok {
      'match' => ["message", "\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:level}: %{GREEDYDATA:msg}"]
    }
    date {
      'add_tag' => "ts"
      'match' => ["timestamp", "ISO8601"]
    }
  }

  mutate {
    'add_tag' => [ "<%= @stack_name %>", "v002" ]
  }
}

output {
  redis {
    'data_type' => "list"
    'host' => "logstash-redis.dealermatch.biz"
    'key' => "logstash"
    'port' => "16379"
  }
}

