input {

        file {
            'exclude' => ["production*log", "unicorn*log", "salesforce*", "resque*.log", "mail_delivery.log", "newrelic*", "cron*", "bluepill*"]
            'path' => ["/srv/www/corndog/shared/log/*.log"]
            'tags' => ["catchall"]
            'type' => "catchall"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/production.log"]
            'tags' => ["rails"]
            'type' => "rails"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/unicorn.stderr.log"]
            'tags' => ["unicorn", "error"]
            'type' => "unicorn"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/unicorn.stdout.log"]
            'tags' => ["unicorn", "access"]
            'type' => "unicorn"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/salesforce_offer_thread_monitor.log"]
            'tags' => ["salesforce", "offer_thread"]
            'type' => "salesforce_offer_thread"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/resque*.log"]
            'tags' => ["resque"]
            'type' => "resque"
        }

        file {
            'path' => ["/srv/www/corndog/shared/log/mail_delivery.log"]
            'tags' => ["mail_delivery"]
            'type' => "mail_delivery"
        }

        file {
            'path' => ["/var/log/nginx/*error*.log"]
            'tags' => ["nginx", "error"]
            'type' => "nginx-error"
        }

        file {
            'path' => ["/var/log/nginx/*access*.log"]
            'tags' => ["nginx", "access"]
            'type' => "nginx-access"
        }

        file {
            'path' => ["/var/lib/aws/opsworks/chef/*.log"]
            'tags' => ["deploy", "chef"]
            'type' => "deploy"
        }
}

filter {

    if "rails" in [tags] {
        multiline {
        'patterns_dir' => "/opt/logstash/agent/etc/patterns"
            'pattern' => "^\s|Processing|Completed|Redirected"
            'what' => "previous"
        }
    }

    if [type] == "salesforce_offer_thread" {
        grok {
        'patterns_dir' => "/opt/logstash/agent/etc/patterns"
            'match' => ["message", "\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{LOGLEVEL:log_level}\] \[%{DATA:message}\] \[%{NUMBER:occurrences}\]"]
        }
    }

    if "nginx" in [tags] and "access" in [tags] {
        grok {
        'patterns_dir' => "/opt/logstash/agent/etc/patterns"
            'match' => ["message", '%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] "(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{QS:forwardedfor} %{NUMBER:timing}']
        }
        date {
            'add_tag' => "ts"
            'match' => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
        }
    }

    if "nginx" in [tags] and "error" in [tags] {
        date {
            'add_tag' => "ts"
            'match' => ["timestamp", "YYYY/MM/dd HH:mm:ss"]
        }
        grok {
        'patterns_dir' => "/opt/logstash/agent/etc/patterns"
            'match' => ["message", "%{GREEDYDATA:timestamp} \[%{DATA:loglevel}\] %{GREEDYDATA:errmsg}"]
        }
    }

    if [type] == "deploy" {
        date {
            'add_tag' => "ts"
            'match' => ["timestamp", "ISO8601"]
        }
        grok {
        'patterns_dir' => "/opt/logstash/agent/etc/patterns"
            'match' => ["message", "\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:level}: %{GREEDYDATA:msg}"]
        }
    }

    mutate {
        'add_tag' => ["<%= @stack_name %>", "<%= @host_role %>"]
    }
}

output {

        redis {
            'data_type' => "list"
            'host' => "logstash-redis.dealermatch.biz"
            'key' => "logstash"
            'port' => "16379"
        }
}

